{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GrifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GrifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,IACdO,QAAQC,IAAKT,KAMjB,SACI,uBACIU,KAAQ,OACRC,MAAUX,EACVY,SArBc,SAACT,GACvBF,EAAeE,EAAEU,OAAOF,a,+BCRnBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACqCC,UAAUH,GAD/C,+DAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAYXM,GAZW,4CAAH,sDCENO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCHCO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECHwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHC,YAAY,WACRjC,QAAQC,IAAI,UAEZ4B,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAGZ,CAACpB,IAGGqB,EDtB0BM,CAAc3B,GAAvCoB,EAAR,EAAQA,QAAcP,EAAtB,EAAiBN,KAEjB,OACI,qCACI,mCAAOP,KACLoB,GAAW,8CACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGSA,GAFCA,EAAIC,aEZzBiB,EAAe,WAExB,MAAoC5C,mBAAU,CAAC,YAAa,YAAa,gBAAzE,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ8C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,aAD0B,CACzB,EAAD,CACIA,SAAUA,GACLA,Y,MCXjC8B,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.ad19521e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('') // Ponerlo como string vacÃ­o para que no vaya undefined en el return\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n\r\n            setCategories( cats => [ inputValue, ...cats ] )\r\n            setInputValue('')\r\n            console.log( inputValue )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type  = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGif = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Y0WGYVVUMpydL5z0v8g48hN4GkI0GZh5`\r\n    const resp = await fetch( url )\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card  animate__animated  animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GrifGrid = ({ category }) => {\r\n\r\n    const { loading, data:images } = useFetchGifs( category )    \r\n\r\n    return (\r\n        <>\r\n            <h3> { category }</h3>\r\n            { loading && <p>Cargando.... </p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            // img={ img }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { getGif } from \"../helpers/getGif\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGif( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout( () => {\r\n                    console.log('aburto')\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    } )\r\n\r\n                }, 3000 )\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state \r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GrifGrid } from './components/GrifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['One Punch', 'Samurai X', 'Dragon Ball'] )\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => ( // () retorna implicitamente\r\n                        <GrifGrid\r\n                            category={category} \r\n                            key={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root') ) \n\n\n"],"sourceRoot":""}